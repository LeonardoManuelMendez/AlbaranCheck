package vista;

import modelo.*;
import controlador.*;

import java.io.File;
import java.util.List;

import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author Leonardo Méndez
 */
public class NuevoAlbaranGUI extends javax.swing.JPanel {

	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form NuevoPrueba
	 */
	public NuevoAlbaranGUI(List<Producto> listaProductos, List<ProductoEnAlbaran> listaProductosEnAlbaran, Albaran albaranActual) {
		initComponents();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		botonSeleccionar = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jLabel3 = new javax.swing.JLabel();
		jScrollPane3 = new javax.swing.JScrollPane();
		jTableListado = new javax.swing.JTable();

		jLabel1.setText("Seleccionar Albarán:");

		jTextField1.setEditable(false);
		jTextField1.setText("Ruta del Archivo");
		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		botonSeleccionar.setText("Seleccionar");
		botonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel2.setText("Datos del Albaŕan Seleccionado:");

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		jLabel3.setText("Articulos");

		// Crear la tabla con el modelo de datos
		jTableListado.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, "" }, { null, null, null, null, null } },
				new String[] { "Código", "Nombre", "Unidades", "Bultos", "Opciones" }) {
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, true };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		// Establecer el tamaño de las columnas
		jScrollPane3.setViewportView(jTableListado);
		if (jTableListado.getColumnModel().getColumnCount() > 0) {
			jTableListado.getColumnModel().getColumn(0).setPreferredWidth(40);
			jTableListado.getColumnModel().getColumn(1).setPreferredWidth(80);
			jTableListado.getColumnModel().getColumn(4).setPreferredWidth(40);
		}
		
		JButton btnVerificar = new JButton("Verificar");
		btnVerificar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				accionBotonVerificar(e);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup()
					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
						.addGroup(layout.createSequentialGroup()
							.addContainerGap()
							.addComponent(btnVerificar))
						.addGroup(layout.createSequentialGroup()
							.addGap(19)
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addComponent(jLabel3)
								.addComponent(jLabel2)
								.addGroup(layout.createSequentialGroup()
									.addComponent(jLabel1)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 377, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
									.addComponent(botonSeleccionar))
								.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
								.addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE))))
					.addGap(39))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(12)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel1)
						.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(botonSeleccionar))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(jLabel2)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(jLabel3)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(jScrollPane3, GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(btnVerificar)
					.addContainerGap())
		);

		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTextField1ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jTextField1ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		JFileChooser fileChooser = new JFileChooser();
		FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos PDF", "pdf");
		fileChooser.setFileFilter(filter);

		int result = fileChooser.showOpenDialog(NuevoAlbaranGUI.this); // Mostrar el diálogo en el panel
		if (result == JFileChooser.APPROVE_OPTION) {
			File archivoElegido = fileChooser.getSelectedFile();
			jTextField1.setText(archivoElegido.getAbsolutePath());
			List<ProductoEnAlbaran> paraTabla = null;
			try {
				paraTabla = Controlador.leerAlbaran(archivoElegido);
			} catch (Exception e) {
				JOptionPane.showMessageDialog(this, "Error al leer el archivo PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
				e.printStackTrace();
			}

			// Colocar la información del albarán seleccionado
			Albaran albaran = paraTabla.get(0).getAlbaran();
			jTextArea1.setText("Albarán número: " + albaran.getNumero());
			jTextArea1.append("\n" + "Fecha: " + albaran.getFecha());

			// Limpiar la tabla antes de insertar nuevos datos
			for (int i = 0; i < jTableListado.getRowCount(); i++) {
				for (int j = 0; j < jTableListado.getColumnCount(); j++) {
					jTableListado.setValueAt("", i, j);
				}
			}

			DefaultTableModel model = (DefaultTableModel) jTableListado.getModel(); // Obtener el modelo de la tabla

			// Insertar los datos en las celdas, agregando filas si es necesario
			for (int i = 0; i < paraTabla.size(); i++) {
				ProductoEnAlbaran producto = paraTabla.get(i);

				if (i >= jTableListado.getRowCount()) {
					model.addRow(new Object[jTableListado.getColumnCount()]); // Agregar una nueva fila vacía
				}

				jTableListado.setValueAt(producto.getProducto().getCodigo(), i, 0);
				jTableListado.setValueAt(producto.getProducto().getNombre(), i, 1);
				jTableListado.setValueAt(producto.getUnidades_esperadas(), i, 2);
				jTableListado.setValueAt(producto.getBultos_esperados(), i, 3);
			}

			// Configurar el JComboBox como editor
			JComboBox<String> comboBox = new JComboBox<>(new String[] { "", "Borrar", "Actualizar" });
			comboBox.setSelectedIndex(-1); // Asegura que no haya selección inicial
			comboBox.addActionListener(e -> {
				int fila = jTableListado.getSelectedRow();
				if (fila >= 0) {
					String opcion = (String) comboBox.getSelectedItem();
					if (opcion != null && !opcion.isEmpty()) { // Ignorar si es la opción vacía
						String codigo = (String) model.getValueAt(fila, 0);
						System.out.println("Fila: " + fila + ", Código: " + codigo + ", Opción: " + opcion);
						switch (opcion) {
						case "Borrar":

							break;
						case "Actualizar":
							

							break;
						}
					}
				}
			});

			TableColumn columnaOpciones = jTableListado.getColumnModel().getColumn(4);
			columnaOpciones.setCellEditor(new DefaultCellEditor(comboBox));
			columnaOpciones.setCellRenderer(new ComboBoxRenderer());
		}

	}// GEN-LAST:event_jButton1ActionPerformed

	static class ComboBoxRenderer extends JComboBox<String> implements TableCellRenderer {
		private static final long serialVersionUID = 1L;

		public ComboBoxRenderer() {
			super(new String[] { "", "Borrar", "Actualizar" });
		}

		@Override
		public java.awt.Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
				boolean hasFocus, int row, int column) {
			setSelectedItem(value);
			if (isSelected) {
				setBackground(table.getSelectionBackground());
				setForeground(table.getSelectionForeground());
			} else {
				setBackground(table.getBackground());
				setForeground(table.getForeground());
			}
			return this;
		}
	}

	private void accionBotonVerificar(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed

		// Obtener el contenedor del JPanel actual
		JPanel contenedor = (JPanel) this.getParent();

		// Remover el JPanel actual
		contenedor.remove(this);

		// Agregar el nuevo JPanel
		VerificacionGUI nuevaVerificacion = new VerificacionGUI(listaProductosEnAlbaran, listaProductos);

		contenedor.add(nuevaVerificacion);

		// Refrescar la interfaz
		contenedor.revalidate();
		contenedor.repaint();

	}// GEN-LAST:event_jButton2ActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton botonSeleccionar;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTable jTableListado;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JTextField jTextField1;
}
